{
  "build": {
    "tasks_filename": "spatialos.unreal.worker.build.json"
  },
  "bridge": {
    "worker_claim": {
      "claims": [
        "UnrealWorker"
      ]
    },
    "entity_interest": {
      "range_entity_interest": {
        "radius": 2
      }
    },
    "streaming_query": [],
    "component_delivery": {
      "default": "RELIABLE_ORDERED",
      "checkout_all_initially": true
    },
    "asset_context": {}
  },
  "managed": {
    "windows": {
      "artifact_name": "UnrealWorker@Windows.zip",
      "command": "unrealServer.exe",
      "arguments": [
        "-server",
        "-stdout",
        "-nowrite",
        "-unattended",
        "-nologtimes",
        "-nopause",
        "-noini",
		"+appName",
		"${IMPROBABLE_PROJECT_NAME}",
		"+receptionistIp",
        "${IMPROBABLE_RECEPTIONIST_IP}",
        "+receptionistPort",
        "${IMPROBABLE_RECEPTIONIST_PORT}",
		"+engineType",
        "${IMPROBABLE_WORKER_NAME}",
        "+engineId",
        "${IMPROBABLE_WORKER_ID}",
        "+linkProtocol",
        "RakNet",
        "-logfile",
        "${IMPROBABLE_LOG_FILE}"
      ]
    },
    "linux": {
      "artifact_name": "UnrealWorker@Linux.zip",
      "command": "unrealServer.sh",
      "arguments": [
        "-server",
        "-stdout",
        "-nowrite",
        "-unattended",
        "-nologtimes",
        "-nopause",
        "-noini",
		"+appName",
		"${IMPROBABLE_PROJECT_NAME}",
		"+receptionistIp",
        "${IMPROBABLE_RECEPTIONIST_IP}",
        "+receptionistPort",
        "${IMPROBABLE_RECEPTIONIST_PORT}",
		"+engineType",
        "${IMPROBABLE_WORKER_NAME}",
        "+engineId",
        "${IMPROBABLE_WORKER_ID}",
        "+linkProtocol",
        "RakNet",
        "-logfile",
        "${IMPROBABLE_LOG_FILE}"
      ]
    }
  },
  "external": {
    "default": {
      "run_type": "EXECUTABLE_ZIP",
      "windows": {
        "artifact_name": "UnrealWorker@Windows.zip",
        "command": "./unrealServer.exe",
        "arguments": [
          "-server",
          "-stdout",
          "-nowrite",
          "-unattended",
          "-nologtimes",
          "-nopause",
          "-noini"
        ]
      }
    }
  }
}
